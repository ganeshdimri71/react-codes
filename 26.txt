React and HTTP
Get Request Code Example.

App.js

import React, { Component } from 'react'
import PostList from './components/PostList'

 class App extends Component {
  render() {
    return (
      <div className='App'>
        <PostList />
      </div>
    )
  }
}

export default App


PostList.js
import React, { Component } from 'react'
import axios from 'axios'
class PostList extends Component {
    constructor(props) {
        super(props)

        this.state = {
            posts: [],
            errorMsg: ''
        }
    }
    componentDidMount() {
        axios.get('https://jsonplaceholder.typicode.com/posts')
            .then(response => {
                console.log(response);
                this.setState({
                    posts: response.data
                })
            })
            .catch(error => {
                console.log(error);
                this.setState({ errorMsg: 'Error Retrieving Data' })
            })
    }
    render() {
        const { posts, errorMsg } = this.state
        return (
            <div>
                List Of Post
                {
                    posts.length ?
                        posts.map(post => <div key={post.id}>{post.title} </div>) : null
                }
                {
                    errorMsg ? <div>{errorMsg}</div> : null
                }
            </div>
        )
    }
}

export default PostList

Code Example of Post Request
import React, { Component } from 'react'
import axios from 'axios'
class PostForm extends Component {
    constructor(props) {
        super(props)

        this.state = {
            userId: '',
            title: '',
            body: ''
        }
    }
    changeHandler = (event) => {
        this.setState({ [event.target.name]: event.target.value })
    }
    submitHandler = (event) => {
        event.preventDefault()
        console.log(this.state);
        axios.post('https://jsonplaceholder.typicode.com/posts', this.state)
            .then(response => {
                console.log(response);
            })
            .catch(error => {
                console.log(error);
            })
    }
    componentDidMount() {

    }
    render() {
        const { userId
            , title, body } = this.state
        return (
            <div>
                <form onSubmit={this.submitHandler}
                >
                    <div>
                        <input type="text" name="userId" value={userId} onChange={this.changeHandler} />
                    </div>
                    <div>
                        <input type="text" name="title" value={title} onChange={this.changeHandler} />
                    </div>
                    <div>
                        <input type="text" name="body" value={body} onChange={this.changeHandler} />
                    </div>
                    <button type='submit'>Submit</button>
                </form>
            </div>
        )
    }
}

export default PostForm
